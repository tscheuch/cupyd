name: pylinters

on:
  pull_request:
    paths:
      - ".github/workflows/pylinters.yaml"
      - "**.py"
      - ".pylintrc"
      - "pyproject.toml"
      - "poetry.lock"
      - "!**/migrations/**"
      - "!README.md"

jobs:
  black:
    runs-on: ubuntu-latest
    timeout-minutes: 15

    steps:
      - uses: actions/checkout@v2

      - name: Set up Python 3.8
        uses: actions/setup-python@v1
        id: pysetup
        with:
          python-version: 3.8

      - name: Install and configure Poetry
        uses: snok/install-poetry@v1.1.1
        with:
          virtualenvs-create: true
          virtualenvs-in-project: true
          version: 1.1.10

      # We aim to build a cache with the dependencies installed by Poetry.
      # In order to do that we need to put them into the .venv directory.
      # Reference: https://python-poetry.org/docs/configuration/
      - name: Set up Poetry cache
        uses: actions/cache@v2
        id: nicanor
        with:
          key: ${{ hashFiles('**/poetry.lock') }}-with-${{ steps.pysetup.outputs.python-version }}
          path: .venv

      - name: Install dependencies
        if: steps.nicanor.outputs.cache-hit != 'true'
        run: make build-dev

      - name: Lint with Black
        run: make black

  isort:
    runs-on: ubuntu-latest
    timeout-minutes: 15

    steps:
      - uses: actions/checkout@v2

      - name: Set up Python 3.8
        uses: actions/setup-python@v1
        id: pysetup
        with:
          python-version: 3.8

      - name: Install and configure Poetry
        uses: snok/install-poetry@v1.1.1
        with:
          virtualenvs-create: true
          virtualenvs-in-project: true
          version: 1.1.10

      # We aim to build a cache with the dependencies installed by Poetry.
      # In order to do that we need to put them into the .venv directory.
      # Reference: https://python-poetry.org/docs/configuration/
      - name: Set up Poetry cache
        uses: actions/cache@v2
        id: nicanor
        with:
          key: ${{ hashFiles('**/poetry.lock') }}-with-${{ steps.pysetup.outputs.python-version }}
          path: .venv

      - name: Install dependencies
        if: steps.nicanor.outputs.cache-hit != 'true'
        run: make build-dev

      - name: Lint with Black
        run: make isort
